name: Digito API

on: [push]

env:
  DOCKER_IMAGE: jtalk/digito-api
  DOCKER_REVISION_TAG: jtalk/digito-api:${{ github.sha }}
  
jobs:
  build-release:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.7]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Build app
        working-directory: digito-api
        run: |
          pip install --upgrade pip
          pip install nose2
          python -m venv --system-site-packages .env
          source .env/bin/activate
          pip install -I -r requirements.txt
          python -m nose2
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build docker image
        working-directory: digito-api
        run: |
          docker build -t "$DOCKER_REVISION_TAG" .
      - name: Push current artefact
        run: |
          docker push "$DOCKER_REVISION_TAG"
      - name: Push branch artefact
        if: github.ref != null
        run: |
          export BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          docker tag "$DOCKER_REVISION_TAG" "$DOCKER_IMAGE:$BRANCH_NAME"
          docker push "$DOCKER_IMAGE:$BRANCH_NAME"
      - name: Push as latest
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag "$DOCKER_REVISION_TAG" "$DOCKER_IMAGE:latest"
          docker push "$DOCKER_IMAGE:latest"
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-release
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v1
      - name: Load Kubernetes config
        # It would be soooo nice to have my k8s config saved to, you know, ~/.kube/config, like 
        # all the normal kids do. Unfortunately, DigitalOcean has a better idea: why using standard
        # paths when you can just lube everything with custom variables? It's obvious everybody likes
        # specifying --kubeconfig=/some/long/paths at their every kubectl command instead of using the
        # default paths & getting on with their lives.
        uses: digitalocean/action-doctl@v1.6.0
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DO_TOKEN }}
        with:
          args: kubernetes cluster kubeconfig show ${{ secrets.DO_K8S_CLUSTER_NAME }} > $GITHUB_WORKSPACE/.kubeconfig
      - name: Fix broken k8s deploy step below (thank you Microsoft for all the mental breakdowns)
        # It would be so great if Azure/k8s-deploy could just, you know, pick up ~/.kube/config
        # like normal kubernetes does... But what am I talking about, Microsoft wouldn't be where
        # it is today if it was following normal conventions and rules. Create hacks, break things, reinstall Windows!
        uses: Azure/k8s-set-context@v1
        with:
          kubeconfig: $GITHUB_WORKSPACE/.kubeconfig 
      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v1
        with:
          namespace: digito
          images: ${{ env.DOCKER_REVISION_TAG }}
          manifests: |
            digito-api/deploy/deployment.yml
            digito-api/deploy/service.yml
            digito-api/deploy/ingress.yml
  verify:
    name: Verify deployment
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Verify the healthcheck URL
        run: |
          RESULT=$(curl http://digito2.jtalk.me/api/health)
          [ "$RESULT" == "OK" ]
    
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
     
